---
import Logo from './Logo.astro';
---

<header
  id="landing-header"
  class="py-4 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white"
>
  <div class="flex flex-grow basis-0">
    <Logo />
  </div>
  <nav>
    <ul
      class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-200 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:py-2 [&>li>a]:px-4"
    >
      <li><a href="#bmwix1">BMW ELECTRIC iX1</a></li>
      <li><a href="#bmwix3">BMW ELECTRIC iX3</a></li>
      <li><a href="#bmwi4">BMW ELECTRIC i4</a></li>
      <li><a href="#bmwi7">BMW ELECTRIC i7</a></li>
    </ul>
  </nav>
  <nav class="flex flex-grow justify-end basis-0">
    <ul
      class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-200 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:py-2 [&>li>a]:px-4"
    >
      <li>
        <a href="https://faq.bmw.es/s/?language=es" target="_blank">Support</a>
      </li>
      <li>
        <a
          href="https://www.bmw.es/es/informacion/promociones/ofertas/index.html"
          target="_blank">Shop</a
        >
      </li>
      <li>
        <a href="https://www.bmw.es/es/home.html" target="_blank">Account</a>
      </li>
      <li>
        <a href="https://www.bmw.es/es/coche-electrico.html" target="_blank"
          >Menu</a
        >
      </li>
    </ul>
  </nav>

  <div
    id="menu-backdrop"
    class={`
      absolute bg-black/5 backdrop-blur-lg rounded
      translate-x-[var(--left)] translate-y-[var(--top)]
      left-0 top-0
      w-[var(--width)] h-[var(--height)]
      transition-all duration-500
      ease-in-out opacity-0 -z-10
  `}
  >
  </div>
</header>

<script>
  const listItem = document.querySelectorAll('#landing-header li');
  const menuBackDrop = document.querySelector('#menu-backdrop') as HTMLElement;

  listItem.forEach((item) => {
    item.addEventListener('mouseenter', () => {
      const { left, top, width, height } = item.getBoundingClientRect();

      menuBackDrop.style.setProperty('--left', `${left}px`);
      menuBackDrop.style.setProperty('--top', `${top}px`);
      menuBackDrop.style.setProperty('--width', `${width}px`);
      menuBackDrop.style.setProperty('--height', `${height}px`);

      menuBackDrop.style.opacity = '1';
      menuBackDrop.style.visibility = 'visible';
    });

    item.addEventListener('mouseleave', () => {
      menuBackDrop.style.opacity = '0';
      menuBackDrop.style.visibility = 'hidden';
    });
  });
</script>

<script>
  const headerElement = document.querySelector(
    '#landing-header'
  ) as HTMLElement;
  const observerOptions = {
    root: null, // Defaults to the viewport. We can use it for a concret element, such as -> root: cardElement to know when inside this card is viewed some thing.
    rootMargin: '0px', // As soon as the element is seen
    threshold: 0.9, // The percentage of visibility. What percentage of visibility do we want that element to have in order to detect it?
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const { isIntersecting } = entry;
      if (isIntersecting) {
        const color = entry.target.getAttribute('data-header-color');
        headerElement.style.color = color;
      }
    });
  }, observerOptions);

  const sectionElements = document.querySelectorAll('.landing-section');
  sectionElements.forEach((section) => observer.observe(section));
</script>
